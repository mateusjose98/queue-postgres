#postgres

spring.datasource.url=jdbc:postgresql://localhost:5998/postgres
#porta aleatória para execução do job
server.port=0
#tamanho do lote a ser lido polo job de processamento de pedidos
batch.size=10
#periodo de execução em segundos
period.job=60
# ativar/desativar o job para o consumo de pedidos
job.enable=true

spring.jpa.properties.hibernate.jdbc.batch_size = 15
spring.jpa.properties.hibernate.order_inserts = true
spring.jpa.properties.hibernate.order_updates = true

spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.threads.virtual.enabled=true

# desativa nas conexçoes o autocommit para que o framework possa controlar o commit
spring.datasource.hikari.auto-commit=false
# tempo de espera para conexão com o banco do pool, o ideal é manter baixo
spring.datasource.hikari.connection-timeout=300
# tempo máximo que uma conexão fica abarta (10min)
spring.datasource.hikari.max-lifetime=600000
# no máximo 20 conexões
spring.datasource.hikari.maximum-pool-size=5
# minimo no pool
spring.datasource.hikari.minimum-idle=10

logging.level.net.ttddyy.dsproxy.listener=debug